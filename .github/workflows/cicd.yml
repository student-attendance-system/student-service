name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  # -----------------
  # 1. Lint
  # -----------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Linter
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.USER_TOKEN }}

  # -----------------
  # 2. SAST (PHPStan)
  # -----------------
  sast:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install PHPStan
        run: |
          cd student-attendance-backend
          composer require --dev phpstan/phpstan
      - name: Run PHPStan Analysis
        run: |
          cd student-attendance-backend
          vendor/bin/phpstan analyse . --level=5

  # -----------------
  # 3. SCA (Dependency Vulnerabilities)
  # -----------------
  sca:
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Dependency Review
        uses: actions/dependency-review-action@v3

  # -----------------
  # 4. Unit Tests
  # -----------------
  tests:
    runs-on: ubuntu-latest
    needs: sca
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # PHP Tests
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install PHP dependencies
        run: |
          cd student-attendance-backend
          composer install || true

      - name: Run PHPUnit
        run: |
          cd student-attendance-backend
          if [ -f vendor/bin/phpunit ]; then vendor/bin/phpunit; else echo "No PHPUnit tests"; fi

      # JS Tests
      - name: Run JS Unit Tests
        run: |
          cd student-attendance-frontend
          if [ -f package.json ]; then npm install && npm test || true; else echo "No JS tests"; fi

  # -----------------
  # 5. Build + Push Docker Images
  # -----------------
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-backend:${{ github.sha }} ./student-attendance-backend
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-backend:${{ github.sha }}

      - name: Build and push frontend image
        run: |
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-frontend:${{ github.sha }} ./student-attendance-frontend
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-frontend:${{ github.sha }}

  # -----------------
  # 6. Update K8s Manifests + Commit (GitOps for ArgoCD)
  # -----------------
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update backend manifest
        run: |
          sed -i "s|image:.*student-backend:.*|image: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-backend:${{ github.sha }}|g" k8s/student-backend-deploy.yml

      - name: Update frontend manifest
        run: |
          sed -i "s|image:.*student-frontend:.*|image: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-frontend:${{ github.sha }}|g" k8s/student-frontend-deploy.yml

      - name: Commit updated manifests
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/student-backend-deploy.yml k8s/student-frontend-deploy.yml
          git commit -m "Update images to ${{ github.sha }}" || echo "No changes to commit"
          git push
