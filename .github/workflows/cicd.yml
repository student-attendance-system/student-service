name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint YAML
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: ".github/workflows/"
          strict: true
          config_data: |
            extends: default
            rules:
              line-length: disable
              truthy: disable
              document-start: disable

  sast:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist
        working-directory: student-attendance-backend
      - name: Install PHPStan
        run: composer require --dev phpstan/phpstan
        working-directory: student-attendance-backend
      - name: Run PHPStan Analysis
        run: vendor/bin/phpstan analyse src --level=3 --no-progress --memory-limit=1G
        working-directory: student-attendance-backend

  sca:
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist
        working-directory: student-attendance-backend
      - name: Run Composer Audit (SCA)
        run: composer audit || true
        working-directory: student-attendance-backend

  tests:
    runs-on: ubuntu-latest
    needs: sca
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist
        working-directory: student-attendance-backend
      - name: Run PHPUnit
        run: |
          if [ -f vendor/bin/phpunit ]; then
            vendor/bin/phpunit --testdox
          else
            echo "No PHPUnit tests found, skipping..."
          fi
        working-directory: student-attendance-backend

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3

      # Set up Docker Buildx with caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v5
        with:
          context: student-attendance-backend
          file: student-attendance-backend/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-backend:${{ github.sha }}
          pull: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Build & Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: student-attendance-frontend
          file: student-attendance-frontend/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-frontend:${{ github.sha }}
          pull: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.USER_TOKEN }}
      - name: Update backend manifest
        run: sed -i "s|image:.*student-backend:.*|image:docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-backend:${{ github.sha }}|g" k8s/student-backend-deploy.yml
      - name: Update frontend manifest
        run: sed -i "s|image:.*student-frontend:.*|image:docker.io/${{ secrets.DOCKERHUB_USERNAME }}/student-frontend:${{ github.sha }}|g" k8s/student-frontend-deploy.yml
      - name: Commit & Push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/*.yml
          git commit -m "Update images to ${{ github.sha }}" || echo "No changes to commit"
          git push origin main --force

  dast:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Wait for app to be ready
        run: |
          echo "Waiting 30s for deployed app to be ready..."
          sleep 30
      - name: Run DAST scan using ZAP Docker
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable
          docker run --rm -v "$(pwd)":/zap/wrk/:rw -t ghcr.io/zaproxy/zaproxy:stable \
          zap-baseline.py -t http://public_ip:30003 -r /zap/wrk/dast-report.html
      - name: Upload DAST report
        uses: actions/upload-artifact@v4
        with:
          name: dast-report
          path: dast-report.html
